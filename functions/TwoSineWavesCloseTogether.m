function TwoSineWavesCloseTogether(L,f1,f2,Fs,v)
% Compute power spectrum of two sinusoids close to each other
% Inputs:
%   L  - sinusoid segment length (default = 2500)
%   f1 - 1st sinusoid frequency  (default = 30 MHz)
%   f2 - 2nd sinusoid frequency  (default = 30.08 MHz)
%   Fs - sample rate             (default = 100 MHz)
%   v  - noise variance          (default = 0.1)

% This function requires DSP System Toolbox(TM)

% Copyright 2019 The MathWorks, Inc.

% Defaults
if nargin < 1
    % Segment length
    L = 2500;
end
if nargin < 2
    % 1st sinusoid frequency
    f1 = 30e6;
end
if nargin < 3
    % 2nd sinusoid frequency
    f2 = 30.08e6;
end
if nargin < 4
    % Sample rate
    Fs = 100e6;
end
if nargin < 5
    % Noise variance
    v = 0.1;
end

% Common Spectrum Analyzer Settings
NAvg = 10;
Ylim = [-20 40];

% Setup Sine Wave
sinewave = dsp.SineWave('Amplitude',3,...
    'Frequency',[f1 f2],'SamplesPerFrame',L,'SampleRate',Fs);

% Create scopes
rectWinSA = dsp.SpectrumAnalyzer('SampleRate',Fs, ...
    'PlotAsTwoSidedSpectrum',false, ...
    'FrequencyResolutionMethod','WindowLength', ...
    'WindowLength',L, ...
    'Window','Rectangular', ...
    'SpectralAverages',NAvg, ...
    'Title','Rectangular Windowed Spectrum',...
    'FFTLengthSource','Property',...
    'FFTLength',L,...
    'YLimits',Ylim);
hannSA = dsp.SpectrumAnalyzer('SampleRate',Fs, ...
    'PlotAsTwoSidedSpectrum',false, ...
    'FrequencyResolutionMethod','WindowLength', ...
    'WindowLength',L, ...
    'Window','Hann', ...
    'SpectralAverages',NAvg, ...
    'Title','Hann Windowed Spectrum',...
    'FFTLengthSource','Property',...
    'FFTLength',L,...
    'YLimits',Ylim);
filterBankSA = dsp.SpectrumAnalyzer('SampleRate',Fs, ...
    'Method','Filter bank', ...
    'PlotAsTwoSidedSpectrum',false, ...
    'FrequencyResolutionMethod','NumFrequencyBands', ...
    'FFTLengthSource','Property', ...
    'FFTLength',L, ...
    'SpectralAverages',NAvg, ...
    'Title','Filter Bank Spectrum',...
    'YLimits',Ylim);

tic
while toc < 60
    % Run for 60 seconds
    x = sum(sinewave(),2) + sqrt(v)*randn(L,1);
    rectWinSA(x);
    hannSA(x);
    filterBankSA(x);
end
    
    

